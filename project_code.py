# -*- coding: utf-8 -*-
"""Capstone 1 V2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://raw.githubusercontent.com/adamastor1/cholesterol-heart-disease-relationship/main/heart%20(1).csv
"""

import math
import pandas as pd
import numpy as np
from scipy import stats
import matplotlib.pyplot as plt

heart = pd.read_csv("https://raw.githubusercontent.com/adamastor1/cholesterol-heart-disease-relationship/main/heart%20(1).csv")

#take a look at the dataset

heart.info()

heart.head(10)

# split up the dataset

hd_yes = heart[(heart['target'] == 1)]
hd_yes.info()

hd_no = heart[(heart['target'] == 0)]
hd_no.info()

#Looks like we have plenty enough patients in each sample to run a t-test

#Set to carry on with the analysis

#Using matplotlib.pyplot we can plot histograms of each sample to visually observe how normal the distribution is

#By setting alpha = .5, the transparency of each histogram is reduced so we can more easily make out overlapping areas

plt.hist(hd_yes['chol'], alpha = .5, label = "Heart Disease Yes")
plt.hist(hd_no['chol'], alpha = .5, label = "Heart Disease No")
plt.legend(loc="upper right")
plt.show()

#These distributions look normal, but there seems to be some outlying data that includes some misleading values

#The histogram has plotted some values of Cholesterol above 500

#This is a small selection of the data, so we are safe to simply drop it and proceed with the analysis

hd_yes_filtered = hd_yes[hd_yes['chol']< 500]
hd_no_filtered = hd_no[hd_no['chol']< 500]

plt.hist(hd_yes_filtered['chol'], alpha = .5, label = "Heart Disease Yes")
plt.hist(hd_no_filtered['chol'], alpha = .5, label = "Heart Disease No")
plt.legend(loc="upper right")
plt.show()

#Looks much cleaner, now let's check the skewness and kurtosis

print(stats.describe(hd_yes_filtered['chol']))
print(stats.describe(hd_no_filtered['chol']))

#The skewness for both is between -3 and 3 and the kurtosis for both is between -3 and 3

#The distributions can be statistically confirmed to be considered normal

#Since the data meets our assumptions, let's proceed to the t-test

#Our two arguments will be the two arrays representing the cholesterol levels of patients with and without heart disease

stats.ttest_ind(hd_yes_filtered['chol'], hd_no_filtered['chol'])

#We know we can reject the null from either of these two results:

#1. The test statistic is greater than 1.96

#2. The p-value is less than .05

#We will round up the test statistic to 1.94 and the p-value to .054

#Both of which do not meet the requirement to reject the null hypothesis, so we are forced to accept the null hypothesis

#Since the outcome of the t-test was very close to supporting the alternate hypothesis,

#we will create a pointplot to visualize how close the samples are

import seaborn as sns

h = sns.pointplot(data=[hd_yes_filtered['chol'],
                        hd_no_filtered['chol']], join=False)

h.set(xticklabels = ['Heart Disease Yes', 'Heart Disease No'])

#As the pointplot visualiztion confirms, the difference in cholesterol level between

#people that have heart disease and those that don't is on average about 12 mg/dl

#This is not a very significant difference and confirms the null hypothesis which states

#Uo: There is not a significant difference between the two populations associated
#with cholesterol levels and heart disease
